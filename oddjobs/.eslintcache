[{"C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\index.js":"1","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\reportWebVitals.js":"2","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\OddJobs.js":"3","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\job\\Job.js":"4","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\job\\JobList.js":"5","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\job\\JobProvider.js":"6","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\ApplicationViews.js":"7","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\nav\\NavBar.js":"8","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\job\\JobForm.js":"9","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\category\\CategoryProvider.js":"10","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\job\\JobDetail.js":"11","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\job\\DeleteJob.js":"12","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\auth\\Login.js":"13","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\auth\\Register.js":"14","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\service\\ServiceList.js":"15","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\service\\ServiceProvider.js":"16","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\service\\Service.js":"17","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\service\\ServiceDetail.js":"18","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\service\\DeleteService.js":"19","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\service\\ServiceForm.js":"20","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\job\\JobSearch.js":"21","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\job\\JobFilter.js":"22","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\job\\FilterForm.js":"23","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\api\\APIProvider.js":"24","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\service\\ServiceSearch.js":"25"},{"size":594,"mtime":1608573419487,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"27"},{"size":598,"mtime":1608746083130,"results":"29","hashOfConfig":"27"},{"size":599,"mtime":1609421389510,"results":"30","hashOfConfig":"27"},{"size":3180,"mtime":1609376435602,"results":"31","hashOfConfig":"27"},{"size":1582,"mtime":1609352976637,"results":"32","hashOfConfig":"27"},{"size":2231,"mtime":1609363489305,"results":"33","hashOfConfig":"27"},{"size":757,"mtime":1608573570200,"results":"34","hashOfConfig":"27"},{"size":5285,"mtime":1609361348369,"results":"35","hashOfConfig":"27"},{"size":695,"mtime":1608736931669,"results":"36","hashOfConfig":"27"},{"size":1043,"mtime":1609420935516,"results":"37","hashOfConfig":"27"},{"size":946,"mtime":1609376966135,"results":"38","hashOfConfig":"27"},{"size":1836,"mtime":1608746559873,"results":"39","hashOfConfig":"27"},{"size":2814,"mtime":1608746624331,"results":"40","hashOfConfig":"27"},{"size":3279,"mtime":1609423388366,"results":"41","hashOfConfig":"27"},{"size":1594,"mtime":1609422466461,"results":"42","hashOfConfig":"27"},{"size":571,"mtime":1608801412245,"results":"43","hashOfConfig":"27"},{"size":1100,"mtime":1608759453179,"results":"44","hashOfConfig":"27"},{"size":964,"mtime":1608801764285,"results":"45","hashOfConfig":"27"},{"size":5829,"mtime":1608804341870,"results":"46","hashOfConfig":"27"},{"size":418,"mtime":1609375318757,"results":"47","hashOfConfig":"27"},{"size":591,"mtime":1609420177434,"results":"48","hashOfConfig":"27"},{"size":5636,"mtime":1609420054115,"results":"49","hashOfConfig":"27"},{"size":723,"mtime":1609371274438,"results":"50","hashOfConfig":"27"},{"size":438,"mtime":1609422335145,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"laym8t",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\index.js",[],["110","111"],"C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\reportWebVitals.js",[],"C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\OddJobs.js",[],"C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\job\\Job.js",[],"C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\job\\JobList.js",["112","113"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { JobContext } from \"./JobProvider\";\r\nimport { Job } from \"./Job\";\r\nimport { JobSearch } from \"./JobSearch\";\r\nimport { JobFilter } from \"./JobFilter\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { DeleteJob } from \"./DeleteJob\";\r\nimport \"./Job.css\";\r\n\r\nexport const JobList = () => {\r\n  const { jobs, getJobs, searchTerms, filteredSearch } = useContext(JobContext);\r\n  const [visibleJobs, setVisibleJobs] = useState([]);\r\n  const [filteredJobs, setFiltered] = useState([]);\r\n\r\n  const currentUser = localStorage.getItem(\"user\");\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    getJobs();\r\n  }, []);\r\n\r\n  //only show visable jobs\r\n  useEffect(() => {\r\n    const filteredVisibleJobs = jobs.filter((job) => job.visible === true);\r\n    setVisibleJobs(filteredVisibleJobs);\r\n  }, [jobs]);\r\n\r\n  // useEffect dependency array with dependencies - will run if dependency changes (state)\r\n  // searchTerms will cause a change\r\n  useEffect(() => {\r\n    if (searchTerms !== \"\") {\r\n      //if blank show all\r\n      const subset = filteredSearch.filter((job) =>\r\n        job.title.toLowerCase().includes(searchTerms)\r\n      );\r\n      setFiltered(subset);\r\n    } else if (filteredSearch != null) {\r\n      setFiltered(filteredSearch);\r\n    } else {\r\n      setFiltered(visibleJobs);\r\n    }\r\n  }, [jobs, searchTerms, visibleJobs]);\r\n\r\n  useEffect(() => {\r\n    if (filteredSearch != null) {\r\n      setFiltered(filteredSearch);\r\n    }\r\n  }, [filteredSearch]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"jobs-header\">\r\n        <h2>Open Jobs</h2>\r\n        <div>\r\n          <button\r\n            onClick={() => {\r\n              if (currentUser) {\r\n                history.push(\"/jobs/create\");\r\n              } else {\r\n                history.push(\"/login\");\r\n              }\r\n            }}\r\n          >\r\n            Add Job\r\n          </button>\r\n        </div>\r\n        <JobSearch />\r\n      </div>\r\n      <div className=\"jobs row\">\r\n        <div className=\"nine columns jobTable\">\r\n          <table className=\"u-full-width\">\r\n            <thead>\r\n              <tr>\r\n                <th>Job</th>\r\n                <th>Category</th>\r\n                <th>Pay</th>\r\n                <th>Location</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {filteredJobs.map((job) => (\r\n                <Job\r\n                  key={job.id}\r\n                  job={job}\r\n                  editBtn={\r\n                    <Link to={`/jobs/edit/${job.id}`} className=\"editBtn\">\r\n                      <FontAwesomeIcon icon={faEdit} />\r\n                    </Link>\r\n                  }\r\n                  deleteBtn={<DeleteJob id={job.id} title={job.title} />}\r\n                />\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div className=\"three columns jobFilters\">\r\n          <JobFilter />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\job\\JobProvider.js",[],"C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\ApplicationViews.js",[],"C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\nav\\NavBar.js",[],"C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\job\\JobForm.js",["114","115"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { JobContext } from \"./JobProvider\";\r\nimport { CategoryContext } from \"../category/CategoryProvider\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n//import SimpleReactValidator from \"simple-react-validator\";\r\n\r\nexport const JobForm = () => {\r\n  const { addJob, getJobById, editJob } = useContext(JobContext);\r\n  const { categories, getCategories } = useContext(CategoryContext);\r\n\r\n  const [job, setJob] = useState({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [checked, setChecked] = useState(true);\r\n  const handleClick = () => {\r\n    if (checked === true) {\r\n      setChecked(false);\r\n    } else {\r\n      setChecked(true);\r\n    }\r\n  };\r\n\r\n  const { jobId } = useParams();\r\n  const history = useHistory();\r\n\r\n  const handleControlledInputChange = (event) => {\r\n    const newJob = { ...job };\r\n    newJob[event.target.name] = event.target.value;\r\n    setJob(newJob);\r\n  };\r\n\r\n  const handleJob = () => {\r\n    if (job.jobCategoryId === \"0\") {\r\n      window.alert(\"Please select a job category\");\r\n    } else {\r\n      if (jobId) {\r\n        //setIsLoading(true);\r\n        editJob({\r\n          id: jobId,\r\n          title: job.title,\r\n          jobCategoryId: parseInt(job.jobCategoryId),\r\n          pay: job.pay,\r\n          details: job.details,\r\n          userId: localStorage.getItem(\"user\"),\r\n          zipCode: parseInt(job.zipCode),\r\n          visible: checked,\r\n          posted: Date.now(),\r\n        }).then(() => history.push(\"/\"));\r\n      } else {\r\n        //POST - add\r\n        addJob({\r\n          title: job.title,\r\n          jobCategoryId: parseInt(job.jobCategoryId),\r\n          pay: job.pay,\r\n          details: job.details,\r\n          userId: 1,\r\n          zipCode: parseInt(job.zipCode),\r\n          visible: checked,\r\n          posted: Date.now(),\r\n        }).then(() => history.push(\"/\"));\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCategories().then(() => {\r\n      if (jobId) {\r\n        getJobById(jobId).then((job) => {\r\n          setJob(job);\r\n          setIsLoading(false);\r\n        });\r\n      } else {\r\n        setIsLoading(true);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h4>{jobId ? <>Edit Job</> : <>Add New Job</>}</h4>\r\n      <form>\r\n        <div className=\"row\">\r\n          <div className=\"six columns\">\r\n            <label htmlFor=\"\">Title</label>\r\n            <input\r\n              onChange={handleControlledInputChange}\r\n              type=\"text\"\r\n              id=\"jobTitle\"\r\n              name=\"title\"\r\n              maxLength=\"50\"\r\n              value={job.title}\r\n              required\r\n              autoFocus\r\n            />\r\n          </div>\r\n          <div className=\"six columns\">\r\n            <label htmlFor=\"\">Category</label>\r\n            <select\r\n              onChange={handleControlledInputChange}\r\n              onClick={handleClick}\r\n              name=\"jobCategoryId\"\r\n              id=\"jobCatelory\"\r\n              value={job.jobCategoryId}\r\n              required\r\n            >\r\n              <option value=\"0\">Select a Catelory</option>\r\n              {categories.map((c) => (\r\n                <option key={c.id} value={c.id}>\r\n                  {c.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"four columns\">\r\n            <label htmlFor=\"\">Pay</label>\r\n            <input\r\n              onChange={handleControlledInputChange}\r\n              type=\"text\"\r\n              id=\"jobPay\"\r\n              name=\"pay\"\r\n              maxLength=\"50\"\r\n              value={job.pay}\r\n              required\r\n              autoFocus\r\n            />\r\n          </div>\r\n          <div className=\"four columns\">\r\n            <label htmlFor=\"\">Zip Code</label>\r\n            <input\r\n              onChange={handleControlledInputChange}\r\n              type=\"text\"\r\n              id=\"zipCode\"\r\n              name=\"zipCode\"\r\n              maxLength=\"5\"\r\n              value={job.zipCode}\r\n              required\r\n              autoFocus\r\n            />\r\n          </div>\r\n          <div className=\"four columns\">\r\n            <label htmlFor=\"\">Visible</label>\r\n            <input\r\n              onChange={handleClick}\r\n              id=\"visible\"\r\n              name=\"visible\"\r\n              autoFocus\r\n              type=\"checkbox\"\r\n              checked={checked}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <label htmlFor=\"\">Details</label>\r\n          <textarea\r\n            onChange={handleControlledInputChange}\r\n            className=\"u-full-width\"\r\n            placeholder=\"Decription of job\"\r\n            id=\"details\"\r\n            name=\"details\"\r\n            value={job.details}\r\n            required\r\n          ></textarea>\r\n        </div>\r\n        <input\r\n          //disabled={isLoading}\r\n          onClick={(event) => {\r\n            if (job.title && job.pay && job.zipCode) {\r\n              event.preventDefault();\r\n              handleJob();\r\n            }\r\n          }}\r\n          className=\"button-primary\"\r\n          type=\"submit\"\r\n          value=\"Submit\"\r\n        ></input>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\category\\CategoryProvider.js",["116"],"import React, { useState, useEffect } from \"react\";\r\nexport const CategoryContext = React.createContext();\r\n\r\nexport const CategoryProvider = (props) => {\r\n  const [categories, setCategory] = useState([]);\r\n\r\n  const getCategories = () => {\r\n    return fetch(\"http://localhost:8088/jobcategories\")\r\n      .then((res) => res.json())\r\n      .then(setCategory);\r\n  };\r\n\r\n  const getCategoryById = (id) => {\r\n    return fetch(`http://localhost:8088/jobcategories/${id}`).then((res) =>\r\n      res.json()\r\n    );\r\n  };\r\n\r\n  return (\r\n    <CategoryContext.Provider\r\n      value={{ categories, getCategories, getCategoryById }}\r\n    >\r\n      {props.children}\r\n    </CategoryContext.Provider>\r\n  );\r\n};\r\n","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\job\\JobDetail.js",["117"],"C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\job\\DeleteJob.js",["118","119","120"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\"; // Import css\r\nimport { JobContext } from \"./JobProvider\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport const DeleteJob = (job) => {\r\n  const { deleteJob } = useContext(JobContext);\r\n\r\n  //show confirm modal\r\n  const alert = () => {\r\n    confirmAlert({\r\n      title: \"Delete Job\",\r\n      message: `Are you sure you want to delete ${job.title}`,\r\n      buttons: [\r\n        {\r\n          label: \"Yes\",\r\n          onClick: () => deleteJob(job.id),\r\n        },\r\n        {\r\n          label: \"No\", //close modal\r\n        },\r\n      ],\r\n    });\r\n  };\r\n\r\n  return (\r\n    <a className=\"deleteBtn\" onClick={alert}>\r\n      <FontAwesomeIcon icon={faTrash} />\r\n    </a>\r\n  );\r\n};\r\n","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\auth\\Login.js",[],"C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\auth\\Register.js",[],"C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\service\\ServiceList.js",["121"],"C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\service\\ServiceProvider.js",[],"C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\service\\Service.js",[],"C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\service\\ServiceDetail.js",["122","123"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { ServiceContext } from \"./ServiceProvider\";\r\n\r\nexport const ServiceDetail = () => {\r\n  const { getServiceById } = useContext(ServiceContext);\r\n  const [service, setService] = useState({});\r\n  const { serviceId } = useParams();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    getServiceById(serviceId).then((response) => {\r\n      setService(response);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"service container\">\r\n      <h3 className=\"service_title\">{service.title}</h3>\r\n      <div>Posted: {service.posted}</div>\r\n      <div className=\"row\">\r\n        <div className=\"one-third column\">\r\n          {\" \"}\r\n          Service Category: {service.jobCategory?.name}\r\n        </div>\r\n        <div className=\"one-third  column\">Price: {service.price}</div>\r\n        <div className=\"one-third column\"> Location: {service.zipCode}</div>\r\n      </div>\r\n      <p className=\"service_details\">Details: {service.details}</p>\r\n    </section>\r\n  );\r\n};\r\n","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\service\\DeleteService.js",["124","125","126"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\"; // Import css\r\nimport { ServiceContext } from \"./ServiceProvider\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport const DeleteService = (service) => {\r\n  const { deleteService } = useContext(ServiceContext);\r\n\r\n  //show confirm modal\r\n  const alert = () => {\r\n    confirmAlert({\r\n      title: \"Delete Service\",\r\n      message: `Are you sure you want to delete ${service.title}`,\r\n      buttons: [\r\n        {\r\n          label: \"Yes\",\r\n          onClick: () => deleteService(service.id),\r\n        },\r\n        {\r\n          label: \"No\", //close modal\r\n        },\r\n      ],\r\n    });\r\n  };\r\n\r\n  return (\r\n    <a onClick={alert}>\r\n      <FontAwesomeIcon icon={faTrash} />\r\n    </a>\r\n  );\r\n};\r\n","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\service\\ServiceForm.js",["127"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { ServiceContext } from \"./ServiceProvider\";\r\nimport { CategoryContext } from \"../category/CategoryProvider\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nexport const ServiceForm = () => {\r\n  const { addService, getServiceById, editService } = useContext(\r\n    ServiceContext\r\n  );\r\n  const { categories, getCategories } = useContext(CategoryContext);\r\n\r\n  const [service, setService] = useState({});\r\n  const [checked, setChecked] = useState(true);\r\n  const handleClick = () => {\r\n    if (checked === true) {\r\n      setChecked(false);\r\n    } else {\r\n      setChecked(true);\r\n    }\r\n  };\r\n\r\n  const { serviceId } = useParams();\r\n  const history = useHistory();\r\n\r\n  const handleControlledInputChange = (event) => {\r\n    const newService = { ...service };\r\n    newService[event.target.name] = event.target.value;\r\n    setService(newService);\r\n  };\r\n\r\n  const handleService = () => {\r\n    if (service.jobCategoryId === \"0\") {\r\n      window.alert(\"Please select a service category\");\r\n    } else {\r\n      if (serviceId) {\r\n        editService({\r\n          id: serviceId,\r\n          title: service.title,\r\n          jobCategoryId: service.jobCategoryId,\r\n          price: service.price,\r\n          details: service.details,\r\n          userId: parseInt(localStorage.getItem(\"user\")),\r\n          zipCode: service.zipCode,\r\n          serviceRadius: service.serviceRadius,\r\n          visible: checked,\r\n          posted: Date.now(),\r\n        }).then(() => history.push(\"/services\"));\r\n      } else {\r\n        addService({\r\n          title: service.title,\r\n          jobCategoryId: service.jobCategoryId,\r\n          price: service.price,\r\n          details: service.details,\r\n          userId: parseInt(localStorage.getItem(\"user\")),\r\n          zipCode: service.zipCode,\r\n          serviceRadius: service.serviceRadius,\r\n          visible: checked,\r\n          posted: Date.now(),\r\n        }).then(() => history.push(\"/services\"));\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCategories().then(() => {\r\n      if (serviceId) {\r\n        getServiceById(serviceId).then((service) => {\r\n          setService(service);\r\n        });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h4>{serviceId ? <>Edit Service</> : <>Add New Service</>}</h4>\r\n      <form>\r\n        <div className=\"row\">\r\n          <div className=\"six columns\">\r\n            <label htmlFor=\"\">Title</label>\r\n            <input\r\n              onChange={handleControlledInputChange}\r\n              type=\"text\"\r\n              id=\"serviceTitle\"\r\n              name=\"title\"\r\n              maxLength=\"50\"\r\n              value={service.title}\r\n              required\r\n              autoFocus\r\n            />\r\n          </div>\r\n          <div className=\"six columns\">\r\n            <label htmlFor=\"\">Category</label>\r\n            <select\r\n              onChange={handleControlledInputChange}\r\n              onClick={handleClick}\r\n              name=\"jobCategoryId\"\r\n              id=\"jobCatelory\"\r\n              value={service.jobCategoryId}\r\n              required\r\n            >\r\n              <option value=\"0\">Select a Catelory</option>\r\n              {categories.map((c) => (\r\n                <option key={c.id} value={c.id}>\r\n                  {c.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"four columns\">\r\n            <label htmlFor=\"\">Price</label>\r\n            <input\r\n              onChange={handleControlledInputChange}\r\n              type=\"text\"\r\n              id=\"servicePrice\"\r\n              name=\"price\"\r\n              maxLength=\"50\"\r\n              value={service.price}\r\n              required\r\n              autoFocus\r\n            />\r\n          </div>\r\n          <div className=\"four columns\">\r\n            <label htmlFor=\"\">Zip Code</label>\r\n            <input\r\n              onChange={handleControlledInputChange}\r\n              type=\"number\"\r\n              id=\"zipCode\"\r\n              name=\"zipCode\"\r\n              maxLength=\"5\"\r\n              value={service.zipCode}\r\n              required\r\n              autoFocus\r\n            />\r\n          </div>\r\n          <div className=\"four columns\">\r\n            <label htmlFor=\"\">Service Radius</label>\r\n            <input\r\n              onChange={handleControlledInputChange}\r\n              type=\"number\"\r\n              id=\"serviceRadius\"\r\n              name=\"serviceRadius\"\r\n              maxLength=\"6\"\r\n              value={service.serviceRadius}\r\n              required\r\n              autoFocus\r\n            />\r\n          </div>\r\n          <div className=\"four columns\">\r\n            <label htmlFor=\"\">Visible</label>\r\n            <input\r\n              onChange={handleClick}\r\n              id=\"visible\"\r\n              name=\"visible\"\r\n              autoFocus\r\n              type=\"checkbox\"\r\n              checked={checked}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <label htmlFor=\"\">Details</label>\r\n          <textarea\r\n            onChange={handleControlledInputChange}\r\n            className=\"u-full-width\"\r\n            placeholder=\"Decription of service\"\r\n            id=\"details\"\r\n            name=\"details\"\r\n            value={service.details}\r\n            required\r\n          ></textarea>\r\n        </div>\r\n        <input\r\n          //disabled={isLoading}\r\n          onClick={(event) => {\r\n            if (service.title && service.price && service.zipCode) {\r\n              event.preventDefault();\r\n              handleService();\r\n            }\r\n          }}\r\n          className=\"button-primary\"\r\n          type=\"submit\"\r\n          value=\"Submit\"\r\n        ></input>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\job\\JobSearch.js",[],"C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\job\\JobFilter.js",["128"],"C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\job\\FilterForm.js",["129","130","131","132","133","134","135","136","137","138","139"],"C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\api\\APIProvider.js",[],"C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\service\\ServiceSearch.js",[],{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":24,"column":6,"nodeType":"146","endLine":24,"endColumn":8,"suggestions":"147"},{"ruleId":"144","severity":1,"message":"148","line":46,"column":6,"nodeType":"146","endLine":46,"endColumn":38,"suggestions":"149"},{"ruleId":"150","severity":1,"message":"151","line":12,"column":10,"nodeType":"152","messageId":"153","endLine":12,"endColumn":19},{"ruleId":"144","severity":1,"message":"154","line":75,"column":6,"nodeType":"146","endLine":75,"endColumn":8,"suggestions":"155"},{"ruleId":"150","severity":1,"message":"156","line":1,"column":27,"nodeType":"152","messageId":"153","endLine":1,"endColumn":36},{"ruleId":"144","severity":1,"message":"157","line":15,"column":6,"nodeType":"146","endLine":15,"endColumn":8,"suggestions":"158"},{"ruleId":"150","severity":1,"message":"156","line":1,"column":29,"nodeType":"152","messageId":"153","endLine":1,"endColumn":38},{"ruleId":"150","severity":1,"message":"159","line":1,"column":40,"nodeType":"152","messageId":"153","endLine":1,"endColumn":48},{"ruleId":"160","severity":1,"message":"161","line":29,"column":5,"nodeType":"162","endLine":29,"endColumn":46},{"ruleId":"144","severity":1,"message":"163","line":22,"column":6,"nodeType":"146","endLine":22,"endColumn":8,"suggestions":"164"},{"ruleId":"150","severity":1,"message":"165","line":9,"column":9,"nodeType":"152","messageId":"153","endLine":9,"endColumn":16},{"ruleId":"144","severity":1,"message":"166","line":15,"column":6,"nodeType":"146","endLine":15,"endColumn":8,"suggestions":"167"},{"ruleId":"150","severity":1,"message":"156","line":1,"column":29,"nodeType":"152","messageId":"153","endLine":1,"endColumn":38},{"ruleId":"150","severity":1,"message":"159","line":1,"column":40,"nodeType":"152","messageId":"153","endLine":1,"endColumn":48},{"ruleId":"160","severity":1,"message":"161","line":29,"column":5,"nodeType":"162","endLine":29,"endColumn":24},{"ruleId":"144","severity":1,"message":"168","line":72,"column":6,"nodeType":"146","endLine":72,"endColumn":8,"suggestions":"169"},{"ruleId":"150","severity":1,"message":"156","line":1,"column":27,"nodeType":"152","messageId":"153","endLine":1,"endColumn":36},{"ruleId":"144","severity":1,"message":"145","line":17,"column":6,"nodeType":"146","endLine":17,"endColumn":8,"suggestions":"170"},{"ruleId":"144","severity":1,"message":"171","line":21,"column":6,"nodeType":"146","endLine":21,"endColumn":8,"suggestions":"172"},{"ruleId":"173","severity":1,"message":"174","line":36,"column":31,"nodeType":"175","messageId":"176","endLine":36,"endColumn":33},{"ruleId":"173","severity":1,"message":"174","line":36,"column":61,"nodeType":"175","messageId":"176","endLine":36,"endColumn":63},{"ruleId":"144","severity":1,"message":"177","line":39,"column":6,"nodeType":"146","endLine":39,"endColumn":34,"suggestions":"178"},{"ruleId":"173","severity":1,"message":"179","line":49,"column":18,"nodeType":"175","messageId":"176","endLine":49,"endColumn":20},{"ruleId":"173","severity":1,"message":"179","line":63,"column":62,"nodeType":"175","messageId":"176","endLine":63,"endColumn":64},{"ruleId":"173","severity":1,"message":"179","line":76,"column":27,"nodeType":"175","messageId":"176","endLine":76,"endColumn":29},{"ruleId":"173","severity":1,"message":"179","line":84,"column":27,"nodeType":"175","messageId":"176","endLine":84,"endColumn":29},{"ruleId":"173","severity":1,"message":"179","line":139,"column":41,"nodeType":"175","messageId":"176","endLine":139,"endColumn":43},{"ruleId":"160","severity":1,"message":"180","line":163,"column":13,"nodeType":"162","endLine":169,"endColumn":14},"no-native-reassign",["181"],"no-negated-in-lhs",["182"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getJobs'. Either include it or remove the dependency array.","ArrayExpression",["183"],"React Hook useEffect has a missing dependency: 'filteredSearch'. Either include it or remove the dependency array.",["184"],"no-unused-vars","'isLoading' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'getCategories', 'getJobById', and 'jobId'. Either include them or remove the dependency array.",["185"],"'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'getJobById' and 'jobId'. Either include them or remove the dependency array.",["186"],"'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'getServices'. Either include it or remove the dependency array.",["187"],"'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getServiceById' and 'serviceId'. Either include them or remove the dependency array.",["188"],"React Hook useEffect has missing dependencies: 'getCategories', 'getServiceById', and 'serviceId'. Either include them or remove the dependency array.",["189"],["190"],"React Hook useEffect has a missing dependency: 'getCategories'. Either include it or remove the dependency array.",["191"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'getZipCodeRadius'. Either include it or remove the dependency array.",["192"],"Expected '===' and instead saw '=='.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},{"desc":"193","fix":"207"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},"Update the dependencies array to be: [getJobs]",{"range":"212","text":"213"},"Update the dependencies array to be: [filteredSearch, jobs, searchTerms, visibleJobs]",{"range":"214","text":"215"},"Update the dependencies array to be: [getCategories, getJobById, jobId]",{"range":"216","text":"217"},"Update the dependencies array to be: [getJobById, jobId]",{"range":"218","text":"219"},"Update the dependencies array to be: [getServices]",{"range":"220","text":"221"},"Update the dependencies array to be: [getServiceById, serviceId]",{"range":"222","text":"223"},"Update the dependencies array to be: [getCategories, getServiceById, serviceId]",{"range":"224","text":"225"},{"range":"226","text":"213"},"Update the dependencies array to be: [getCategories]",{"range":"227","text":"228"},"Update the dependencies array to be: [filteredSearch, btnClicked, getZipCodeRadius]",{"range":"229","text":"230"},[863,865],"[getJobs]",[1548,1580],"[filteredSearch, jobs, searchTerms, visibleJobs]",[2193,2195],"[getCategories, getJobById, jobId]",[483,485],"[getJobById, jobId]",[867,869],"[getServices]",[511,513],"[getServiceById, serviceId]",[2239,2241],"[getCategories, getServiceById, serviceId]",[703,705],[759,761],"[getCategories]",[1317,1345],"[filteredSearch, btnClicked, getZipCodeRadius]"]