[{"C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\index.js":"1","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\reportWebVitals.js":"2","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\OddJobs.js":"3","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\job\\Job.js":"4","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\job\\JobList.js":"5","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\job\\JobProvider.js":"6","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\ApplicationViews.js":"7","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\nav\\NavBar.js":"8","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\job\\JobForm.js":"9","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\category\\CategoryProvider.js":"10","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\job\\JobDetail.js":"11","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\job\\DeleteJob.js":"12","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\auth\\Login.js":"13","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\auth\\Register.js":"14","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\service\\ServiceList.js":"15","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\service\\ServiceProvider.js":"16","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\service\\Service.js":"17","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\service\\ServiceDetail.js":"18","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\service\\DeleteService.js":"19","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\service\\ServiceForm.js":"20","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\job\\JobSearch.js":"21","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\job\\JobFilter.js":"22","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\job\\FilterForm.js":"23","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\api\\APIProvider.js":"24","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\service\\ServiceSearch.js":"25","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\service\\ServiceFilter.js":"26","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\service\\FilterForm.js":"27","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\user\\UserProvider.js":"28","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\user\\UserAccount.js":"29","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\user\\UserPostCard.js":"30"},{"size":641,"mtime":1609982466546,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":499162500000,"results":"33","hashOfConfig":"32"},{"size":598,"mtime":1608746083130,"results":"34","hashOfConfig":"32"},{"size":599,"mtime":1609421389510,"results":"35","hashOfConfig":"32"},{"size":3162,"mtime":1609983856300,"results":"36","hashOfConfig":"32"},{"size":1582,"mtime":1609352976637,"results":"37","hashOfConfig":"32"},{"size":2576,"mtime":1609978331866,"results":"38","hashOfConfig":"32"},{"size":757,"mtime":1608573570200,"results":"39","hashOfConfig":"32"},{"size":5285,"mtime":1609361348369,"results":"40","hashOfConfig":"32"},{"size":695,"mtime":1608736931669,"results":"41","hashOfConfig":"32"},{"size":1043,"mtime":1609420935516,"results":"42","hashOfConfig":"32"},{"size":946,"mtime":1609376966135,"results":"43","hashOfConfig":"32"},{"size":1836,"mtime":1608746559873,"results":"44","hashOfConfig":"32"},{"size":2814,"mtime":1608746624331,"results":"45","hashOfConfig":"32"},{"size":3576,"mtime":1609983914968,"results":"46","hashOfConfig":"32"},{"size":1706,"mtime":1609514990292,"results":"47","hashOfConfig":"32"},{"size":571,"mtime":1608801412245,"results":"48","hashOfConfig":"32"},{"size":1100,"mtime":1608759453179,"results":"49","hashOfConfig":"32"},{"size":964,"mtime":1608801764285,"results":"50","hashOfConfig":"32"},{"size":5889,"mtime":1609517002932,"results":"51","hashOfConfig":"32"},{"size":418,"mtime":1609375318757,"results":"52","hashOfConfig":"32"},{"size":580,"mtime":1609423492722,"results":"53","hashOfConfig":"32"},{"size":5636,"mtime":1609420054115,"results":"54","hashOfConfig":"32"},{"size":723,"mtime":1609371274438,"results":"55","hashOfConfig":"32"},{"size":438,"mtime":1609422335145,"results":"56","hashOfConfig":"32"},{"size":586,"mtime":1609424647277,"results":"57","hashOfConfig":"32"},{"size":5789,"mtime":1609610193115,"results":"58","hashOfConfig":"32"},{"size":415,"mtime":1609980358070,"results":"59","hashOfConfig":"32"},{"size":1819,"mtime":1609983723884,"results":"60","hashOfConfig":"32"},{"size":705,"mtime":1609983546286,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"laym8t",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\index.js",[],"C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\reportWebVitals.js",[],["132","133"],"C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\OddJobs.js",[],"C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\job\\Job.js",[],"C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\job\\JobList.js",["134","135"],"C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\job\\JobProvider.js",[],"C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\ApplicationViews.js",[],"C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\nav\\NavBar.js",[],"C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\job\\JobForm.js",["136","137"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { JobContext } from \"./JobProvider\";\r\nimport { CategoryContext } from \"../category/CategoryProvider\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n//import SimpleReactValidator from \"simple-react-validator\";\r\n\r\nexport const JobForm = () => {\r\n  const { addJob, getJobById, editJob } = useContext(JobContext);\r\n  const { categories, getCategories } = useContext(CategoryContext);\r\n\r\n  const [job, setJob] = useState({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [checked, setChecked] = useState(true);\r\n  const handleClick = () => {\r\n    if (checked === true) {\r\n      setChecked(false);\r\n    } else {\r\n      setChecked(true);\r\n    }\r\n  };\r\n\r\n  const { jobId } = useParams();\r\n  const history = useHistory();\r\n\r\n  const handleControlledInputChange = (event) => {\r\n    const newJob = { ...job };\r\n    newJob[event.target.name] = event.target.value;\r\n    setJob(newJob);\r\n  };\r\n\r\n  const handleJob = () => {\r\n    if (job.jobCategoryId === \"0\") {\r\n      window.alert(\"Please select a job category\");\r\n    } else {\r\n      if (jobId) {\r\n        //setIsLoading(true);\r\n        editJob({\r\n          id: jobId,\r\n          title: job.title,\r\n          jobCategoryId: parseInt(job.jobCategoryId),\r\n          pay: job.pay,\r\n          details: job.details,\r\n          userId: localStorage.getItem(\"user\"),\r\n          zipCode: parseInt(job.zipCode),\r\n          visible: checked,\r\n          posted: Date.now(),\r\n        }).then(() => history.push(\"/\"));\r\n      } else {\r\n        //POST - add\r\n        addJob({\r\n          title: job.title,\r\n          jobCategoryId: parseInt(job.jobCategoryId),\r\n          pay: job.pay,\r\n          details: job.details,\r\n          userId: 1,\r\n          zipCode: parseInt(job.zipCode),\r\n          visible: checked,\r\n          posted: Date.now(),\r\n        }).then(() => history.push(\"/\"));\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCategories().then(() => {\r\n      if (jobId) {\r\n        getJobById(jobId).then((job) => {\r\n          setJob(job);\r\n          setIsLoading(false);\r\n        });\r\n      } else {\r\n        setIsLoading(true);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h4>{jobId ? <>Edit Job</> : <>Add New Job</>}</h4>\r\n      <form>\r\n        <div className=\"row\">\r\n          <div className=\"six columns\">\r\n            <label htmlFor=\"\">Title</label>\r\n            <input\r\n              onChange={handleControlledInputChange}\r\n              type=\"text\"\r\n              id=\"jobTitle\"\r\n              name=\"title\"\r\n              maxLength=\"50\"\r\n              value={job.title}\r\n              required\r\n              autoFocus\r\n            />\r\n          </div>\r\n          <div className=\"six columns\">\r\n            <label htmlFor=\"\">Category</label>\r\n            <select\r\n              onChange={handleControlledInputChange}\r\n              onClick={handleClick}\r\n              name=\"jobCategoryId\"\r\n              id=\"jobCatelory\"\r\n              value={job.jobCategoryId}\r\n              required\r\n            >\r\n              <option value=\"0\">Select a Catelory</option>\r\n              {categories.map((c) => (\r\n                <option key={c.id} value={c.id}>\r\n                  {c.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"four columns\">\r\n            <label htmlFor=\"\">Pay</label>\r\n            <input\r\n              onChange={handleControlledInputChange}\r\n              type=\"text\"\r\n              id=\"jobPay\"\r\n              name=\"pay\"\r\n              maxLength=\"50\"\r\n              value={job.pay}\r\n              required\r\n              autoFocus\r\n            />\r\n          </div>\r\n          <div className=\"four columns\">\r\n            <label htmlFor=\"\">Zip Code</label>\r\n            <input\r\n              onChange={handleControlledInputChange}\r\n              type=\"text\"\r\n              id=\"zipCode\"\r\n              name=\"zipCode\"\r\n              maxLength=\"5\"\r\n              value={job.zipCode}\r\n              required\r\n              autoFocus\r\n            />\r\n          </div>\r\n          <div className=\"four columns\">\r\n            <label htmlFor=\"\">Visible</label>\r\n            <input\r\n              onChange={handleClick}\r\n              id=\"visible\"\r\n              name=\"visible\"\r\n              autoFocus\r\n              type=\"checkbox\"\r\n              checked={checked}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <label htmlFor=\"\">Details</label>\r\n          <textarea\r\n            onChange={handleControlledInputChange}\r\n            className=\"u-full-width\"\r\n            placeholder=\"Decription of job\"\r\n            id=\"details\"\r\n            name=\"details\"\r\n            value={job.details}\r\n            required\r\n          ></textarea>\r\n        </div>\r\n        <input\r\n          //disabled={isLoading}\r\n          onClick={(event) => {\r\n            if (job.title && job.pay && job.zipCode) {\r\n              event.preventDefault();\r\n              handleJob();\r\n            }\r\n          }}\r\n          className=\"button-primary\"\r\n          type=\"submit\"\r\n          value=\"Submit\"\r\n        ></input>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\category\\CategoryProvider.js",["138"],"import React, { useState, useEffect } from \"react\";\r\nexport const CategoryContext = React.createContext();\r\n\r\nexport const CategoryProvider = (props) => {\r\n  const [categories, setCategory] = useState([]);\r\n\r\n  const getCategories = () => {\r\n    return fetch(\"http://localhost:8088/jobcategories\")\r\n      .then((res) => res.json())\r\n      .then(setCategory);\r\n  };\r\n\r\n  const getCategoryById = (id) => {\r\n    return fetch(`http://localhost:8088/jobcategories/${id}`).then((res) =>\r\n      res.json()\r\n    );\r\n  };\r\n\r\n  return (\r\n    <CategoryContext.Provider\r\n      value={{ categories, getCategories, getCategoryById }}\r\n    >\r\n      {props.children}\r\n    </CategoryContext.Provider>\r\n  );\r\n};\r\n","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\job\\JobDetail.js",["139"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { JobContext } from \"./JobProvider\";\r\n\r\nexport const JobDetail = () => {\r\n  const { getJobById } = useContext(JobContext);\r\n  const [job, setJob] = useState({});\r\n  const { jobId } = useParams();\r\n\r\n  useEffect(() => {\r\n    getJobById(jobId).then((response) => {\r\n      setJob(response); //set selected job\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"jobDetailContainer container\">\r\n      <h3 className=\"job_title\">{job.title}</h3>\r\n      <div>Posted: {job.posted}</div>\r\n      <div> Job Category: {job.jobCategory?.name}</div>\r\n      <div className=\"row\">\r\n        <div className=\"one-half  column\">Pay: {job.pay}</div>\r\n        <div className=\"one-half column\"> Location: {job.zipCode}</div>\r\n      </div>\r\n      <p className=\"job_details\">Details: {job.details}</p>\r\n      <Link className=\"backLink\" to=\"/\">\r\n        Back\r\n      </Link>\r\n    </section>\r\n  );\r\n};\r\n","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\job\\DeleteJob.js",["140","141","142"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\"; // Import css\r\nimport { JobContext } from \"./JobProvider\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport const DeleteJob = (job) => {\r\n  const { deleteJob } = useContext(JobContext);\r\n\r\n  //show confirm modal\r\n  const alert = () => {\r\n    confirmAlert({\r\n      title: \"Delete Job\",\r\n      message: `Are you sure you want to delete ${job.title}`,\r\n      buttons: [\r\n        {\r\n          label: \"Yes\",\r\n          onClick: () => deleteJob(job.id),\r\n        },\r\n        {\r\n          label: \"No\", //close modal\r\n        },\r\n      ],\r\n    });\r\n  };\r\n\r\n  return (\r\n    <a className=\"deleteBtn\" onClick={alert}>\r\n      <FontAwesomeIcon icon={faTrash} />\r\n    </a>\r\n  );\r\n};\r\n","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\auth\\Login.js",[],"C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\auth\\Register.js",[],"C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\service\\ServiceList.js",["143","144"],"C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\service\\ServiceProvider.js",[],"C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\service\\Service.js",[],"C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\service\\ServiceDetail.js",["145","146"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { ServiceContext } from \"./ServiceProvider\";\r\n\r\nexport const ServiceDetail = () => {\r\n  const { getServiceById } = useContext(ServiceContext);\r\n  const [service, setService] = useState({});\r\n  const { serviceId } = useParams();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    getServiceById(serviceId).then((response) => {\r\n      setService(response);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"service container\">\r\n      <h3 className=\"service_title\">{service.title}</h3>\r\n      <div>Posted: {service.posted}</div>\r\n      <div className=\"row\">\r\n        <div className=\"one-third column\">\r\n          {\" \"}\r\n          Service Category: {service.jobCategory?.name}\r\n        </div>\r\n        <div className=\"one-third  column\">Price: {service.price}</div>\r\n        <div className=\"one-third column\"> Location: {service.zipCode}</div>\r\n      </div>\r\n      <p className=\"service_details\">Details: {service.details}</p>\r\n    </section>\r\n  );\r\n};\r\n","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\service\\DeleteService.js",["147","148","149"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\"; // Import css\r\nimport { ServiceContext } from \"./ServiceProvider\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport const DeleteService = (service) => {\r\n  const { deleteService } = useContext(ServiceContext);\r\n\r\n  //show confirm modal\r\n  const alert = () => {\r\n    confirmAlert({\r\n      title: \"Delete Service\",\r\n      message: `Are you sure you want to delete ${service.title}`,\r\n      buttons: [\r\n        {\r\n          label: \"Yes\",\r\n          onClick: () => deleteService(service.id),\r\n        },\r\n        {\r\n          label: \"No\", //close modal\r\n        },\r\n      ],\r\n    });\r\n  };\r\n\r\n  return (\r\n    <a onClick={alert}>\r\n      <FontAwesomeIcon icon={faTrash} />\r\n    </a>\r\n  );\r\n};\r\n","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\service\\ServiceForm.js",["150"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { ServiceContext } from \"./ServiceProvider\";\r\nimport { CategoryContext } from \"../category/CategoryProvider\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nexport const ServiceForm = () => {\r\n  const { addService, getServiceById, editService } = useContext(\r\n    ServiceContext\r\n  );\r\n  const { categories, getCategories } = useContext(CategoryContext);\r\n\r\n  const [service, setService] = useState({});\r\n  const [checked, setChecked] = useState(true);\r\n  const handleClick = () => {\r\n    if (checked === true) {\r\n      setChecked(false);\r\n    } else {\r\n      setChecked(true);\r\n    }\r\n  };\r\n\r\n  const { serviceId } = useParams();\r\n  const history = useHistory();\r\n\r\n  const handleControlledInputChange = (event) => {\r\n    const newService = { ...service };\r\n    newService[event.target.name] = event.target.value;\r\n    setService(newService);\r\n  };\r\n\r\n  const handleService = () => {\r\n    if (service.jobCategoryId === \"0\") {\r\n      window.alert(\"Please select a service category\");\r\n    } else {\r\n      if (serviceId) {\r\n        editService({\r\n          id: serviceId,\r\n          title: service.title,\r\n          jobCategoryId: parseInt(service.jobCategoryId),\r\n          price: service.price,\r\n          details: service.details,\r\n          userId: parseInt(localStorage.getItem(\"user\")),\r\n          zipCode: parseInt(service.zipCode),\r\n          serviceRadius: parseInt(service.serviceRadius),\r\n          visible: checked,\r\n          posted: Date.now(),\r\n        }).then(() => history.push(\"/services\"));\r\n      } else {\r\n        addService({\r\n          title: service.title,\r\n          jobCategoryId: parseInt(service.jobCategoryId),\r\n          price: service.price,\r\n          details: service.details,\r\n          userId: parseInt(localStorage.getItem(\"user\")),\r\n          zipCode: parseInt(service.zipCode),\r\n          serviceRadius: parseInt(service.serviceRadius),\r\n          visible: checked,\r\n          posted: Date.now(),\r\n        }).then(() => history.push(\"/services\"));\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCategories().then(() => {\r\n      if (serviceId) {\r\n        getServiceById(serviceId).then((service) => {\r\n          setService(service);\r\n        });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h4>{serviceId ? <>Edit Service</> : <>Add New Service</>}</h4>\r\n      <form>\r\n        <div className=\"row\">\r\n          <div className=\"six columns\">\r\n            <label htmlFor=\"\">Title</label>\r\n            <input\r\n              onChange={handleControlledInputChange}\r\n              type=\"text\"\r\n              id=\"serviceTitle\"\r\n              name=\"title\"\r\n              maxLength=\"50\"\r\n              value={service.title}\r\n              required\r\n              autoFocus\r\n            />\r\n          </div>\r\n          <div className=\"six columns\">\r\n            <label htmlFor=\"\">Category</label>\r\n            <select\r\n              onChange={handleControlledInputChange}\r\n              onClick={handleClick}\r\n              name=\"jobCategoryId\"\r\n              id=\"jobCatelory\"\r\n              value={service.jobCategoryId}\r\n              required\r\n            >\r\n              <option value=\"0\">Select a Catelory</option>\r\n              {categories.map((c) => (\r\n                <option key={c.id} value={c.id}>\r\n                  {c.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"four columns\">\r\n            <label htmlFor=\"\">Price</label>\r\n            <input\r\n              onChange={handleControlledInputChange}\r\n              type=\"text\"\r\n              id=\"servicePrice\"\r\n              name=\"price\"\r\n              maxLength=\"50\"\r\n              value={service.price}\r\n              required\r\n              autoFocus\r\n            />\r\n          </div>\r\n          <div className=\"four columns\">\r\n            <label htmlFor=\"\">Zip Code</label>\r\n            <input\r\n              onChange={handleControlledInputChange}\r\n              type=\"number\"\r\n              id=\"zipCode\"\r\n              name=\"zipCode\"\r\n              maxLength=\"5\"\r\n              value={service.zipCode}\r\n              required\r\n              autoFocus\r\n            />\r\n          </div>\r\n          <div className=\"four columns\">\r\n            <label htmlFor=\"\">Service Radius</label>\r\n            <input\r\n              onChange={handleControlledInputChange}\r\n              type=\"number\"\r\n              id=\"serviceRadius\"\r\n              name=\"serviceRadius\"\r\n              maxLength=\"6\"\r\n              value={service.serviceRadius}\r\n              required\r\n              autoFocus\r\n            />\r\n          </div>\r\n          <div className=\"four columns\">\r\n            <label htmlFor=\"\">Visible</label>\r\n            <input\r\n              onChange={handleClick}\r\n              id=\"visible\"\r\n              name=\"visible\"\r\n              autoFocus\r\n              type=\"checkbox\"\r\n              checked={checked}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <label htmlFor=\"\">Details</label>\r\n          <textarea\r\n            onChange={handleControlledInputChange}\r\n            className=\"u-full-width\"\r\n            placeholder=\"Decription of service\"\r\n            id=\"details\"\r\n            name=\"details\"\r\n            value={service.details}\r\n            required\r\n          ></textarea>\r\n        </div>\r\n        <input\r\n          //disabled={isLoading}\r\n          onClick={(event) => {\r\n            if (service.title && service.price && service.zipCode) {\r\n              event.preventDefault();\r\n              handleService();\r\n            }\r\n          }}\r\n          className=\"button-primary\"\r\n          type=\"submit\"\r\n          value=\"Submit\"\r\n        ></input>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\job\\JobSearch.js",[],"C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\job\\JobFilter.js",[],"C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\job\\FilterForm.js",["151","152","153","154","155","156","157","158","159","160","161"],"import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { CategoryContext } from \"../category/CategoryProvider\";\r\nimport { APIContext } from \"../api/APIProvider\";\r\nimport { JobContext } from \"./JobProvider\";\r\n\r\nexport const FilterForm = () => {\r\n  const { categories, getCategories } = useContext(CategoryContext);\r\n  const { setFilteredSearch, getJobs, jobs, filteredSearch } = useContext(\r\n    JobContext\r\n  );\r\n  const { zipCodeRadius, getZipCodeRadius } = useContext(APIContext);\r\n  const [visibleJobs, setVisibleJobs] = useState([]);\r\n  const [btnClicked, setBtnClicked] = useState(false); //notify when filter \"apply\" btn click\r\n\r\n  useEffect(() => {\r\n    getJobs();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getCategories();\r\n  }, []);\r\n\r\n  //use let so the inputs can\r\n  let jobCategoryId = useRef(null);\r\n  let zipCode = useRef(null);\r\n  let radius = useRef(null);\r\n\r\n  //only show visable jobs\r\n  useEffect(() => {\r\n    const filteredVisibleJobs = jobs.filter((job) => job.visible === true);\r\n    setVisibleJobs(filteredVisibleJobs);\r\n  }, [jobs]);\r\n\r\n  //only get radius when both zipcode and raduis are filled\r\n  useEffect(() => {\r\n    if (zipCode.current.value != \"\" && radius.current.value != \"\") {\r\n      getZipCodeRadius(zipCode.current.value, radius.current.value);\r\n    }\r\n  }, [filteredSearch, btnClicked]);\r\n\r\n  const handleFilters = () => {\r\n    const categoryId = parseInt(jobCategoryId.current.value);\r\n    const zip = zipCode.current.value;\r\n    const radiusMiles = radius.current.value;\r\n\r\n    if (\r\n      categoryId !== \"0\" &&\r\n      categoryId !== 0 &&\r\n      zip.length == 5 &&\r\n      parseInt(radiusMiles) > 0\r\n    ) {\r\n      //all filtered\r\n      const zipCodeResponse = zipCodeRadius?.DataList;\r\n      const zipCodes = zipCodeResponse.map((zip) => parseInt(zip.Code));\r\n      const subset = visibleJobs.filter(\r\n        (job) =>\r\n          zipCodes.includes(job.zipCode) &&\r\n          job.jobCategoryId === categoryId &&\r\n          job.zipCode === parseInt(zip)\r\n      );\r\n      setFilteredSearch(subset);\r\n    }\r\n    if (categoryId !== \"0\" && categoryId !== 0 && zip.length == 5) {\r\n      //check for category and zipcode\r\n      const subset = visibleJobs.filter(\r\n        (job) =>\r\n          job.jobCategoryId === categoryId && job.zipCode === parseInt(zip)\r\n      );\r\n      setFilteredSearch(subset);\r\n    } else if (categoryId !== \"0\" && categoryId !== 0) {\r\n      //check for category only\r\n      const subset = visibleJobs.filter(\r\n        (job) => job.jobCategoryId === categoryId\r\n      );\r\n      setFilteredSearch(subset);\r\n    } else if (zip.length == 5 && parseInt(radiusMiles) > 0) {\r\n      const zipCodeResponse = zipCodeRadius?.DataList;\r\n      const zipCodes = zipCodeResponse.map((zip) => parseInt(zip.Code));\r\n\r\n      const subset = visibleJobs.filter((job) =>\r\n        zipCodes.includes(job.zipCode)\r\n      );\r\n      setFilteredSearch(subset);\r\n    } else if (zip.length == 5) {\r\n      //check for zipcode only\r\n      const subset = visibleJobs.filter((job) => job.zipCode === parseInt(zip));\r\n      setFilteredSearch(subset);\r\n    } else {\r\n      setFilteredSearch(visibleJobs);\r\n    }\r\n  };\r\n\r\n  //clear fields for reset btn\r\n  const resetFields = () => {\r\n    jobCategoryId.current.value = 0;\r\n    zipCode.current.value = \"\";\r\n    radius.current.value = \"\";\r\n    setFilteredSearch(visibleJobs);\r\n  };\r\n\r\n  return (\r\n    <div className=\"s-layout\">\r\n      <div className=\"s-layout__sidebar\">\r\n        <nav className=\"s-sidebar__nav\">\r\n          <div>\r\n            <label htmlFor=\"\">Category</label>\r\n            <select\r\n              name=\"jobCategoryId\"\r\n              id=\"jobCatelory\"\r\n              ref={jobCategoryId}\r\n              required\r\n            >\r\n              <option value=\"0\">Select a Catelory</option>\r\n              {categories.map((c) => (\r\n                <option key={c.id} value={c.id}>\r\n                  {c.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"\">Zip Code</label>\r\n            <input type=\"text\" id=\"zipCode\" ref={zipCode} />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"\">Radius</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"radius\"\r\n              ref={radius}\r\n              placeholder=\"in miles...\"\r\n            />\r\n          </div>\r\n          <div className=\"filterBtn\">\r\n            <button\r\n              onClick={() => {\r\n                if (\r\n                  parseInt(radius.current.value) > 0 &&\r\n                  zipCode.current.value == \"\"\r\n                ) {\r\n                  alert(\"Enter zipcode to find radius\");\r\n                } else if (\r\n                  parseInt(radius.current.value) < 1 ||\r\n                  parseInt(radius.current.value) < 200\r\n                ) {\r\n                  alert(\"Radius must be between 1 and 200 miles\");\r\n                } else {\r\n                  handleFilters();\r\n                }\r\n\r\n                //btn toggle for radius useEffect\r\n                if (btnClicked === false) {\r\n                  setBtnClicked(true);\r\n                } else {\r\n                  setBtnClicked(false);\r\n                }\r\n              }}\r\n            >\r\n              Filter\r\n            </button>\r\n          </div>\r\n          <div className=\"resetBtn\">\r\n            <a\r\n              className=\"resetLink\"\r\n              href=\"#\"\r\n              onClick={() => {\r\n                resetFields();\r\n              }}\r\n            >\r\n              Reset\r\n            </a>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\api\\APIProvider.js",[],"C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\service\\ServiceSearch.js",[],"C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\service\\ServiceFilter.js",[],"C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\service\\FilterForm.js",["162","163","164","165","166","167","168","169","170","171","172"],"import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { CategoryContext } from \"../category/CategoryProvider\";\r\nimport { APIContext } from \"../api/APIProvider\";\r\nimport { ServiceContext } from \"./ServiceProvider\";\r\n\r\nexport const FilterForm = () => {\r\n  const { categories, getCategories } = useContext(CategoryContext);\r\n  const { zipCodeRadius, getZipCodeRadius } = useContext(APIContext);\r\n  const {\r\n    setFilteredSearch,\r\n    getServices,\r\n    services,\r\n    filteredSearch,\r\n  } = useContext(ServiceContext);\r\n  const [visibleServices, setVisibleServices] = useState([]);\r\n  const [btnClicked, setBtnClicked] = useState(false); //notify when filter \"apply\"\r\n\r\n  useEffect(() => {\r\n    getCategories();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getServices();\r\n  }, []);\r\n\r\n  //use let so the inputs can\r\n  let jobCategoryId = useRef(null);\r\n  let zipCode = useRef(null);\r\n  let radius = useRef(null);\r\n\r\n  //only show visible services\r\n  useEffect(() => {\r\n    const subset = services.filter((service) => service.visible === true);\r\n    setVisibleServices(subset);\r\n  }, [services]);\r\n\r\n  //only get radius when both zipcode and raduis are filled\r\n  useEffect(() => {\r\n    if (zipCode.current.value != \"\" && radius.current.value != \"\") {\r\n      getZipCodeRadius(zipCode.current.value, radius.current.value);\r\n    }\r\n  }, [filteredSearch, btnClicked]);\r\n\r\n  const handleFilters = () => {\r\n    const categoryId = parseInt(jobCategoryId.current.value);\r\n    const zip = zipCode.current.value;\r\n    const radiusMiles = radius.current.value;\r\n\r\n    if (\r\n      categoryId !== \"0\" &&\r\n      categoryId !== 0 &&\r\n      zip.length == 5 &&\r\n      parseInt(radiusMiles) > 0\r\n    ) {\r\n      //all filtered\r\n      const zipCodeResponse = zipCodeRadius?.DataList;\r\n      const zipCodes = zipCodeResponse.map((zip) => parseInt(zip.Code));\r\n      const subset = visibleServices.filter(\r\n        (service) =>\r\n          zipCodes.includes(service.zipCode) &&\r\n          service.jobCategoryId === categoryId &&\r\n          service.zipCode === parseInt(zip)\r\n      );\r\n      setFilteredSearch(subset);\r\n    }\r\n    if (categoryId !== \"0\" && categoryId !== 0 && zip.length == 5) {\r\n      //check for category and zipcode\r\n      const subset = visibleServices.filter(\r\n        (service) =>\r\n          service.jobCategoryId === categoryId &&\r\n          service.zipCode === parseInt(zip)\r\n      );\r\n      setFilteredSearch(subset);\r\n    } else if (categoryId !== \"0\" && categoryId !== 0) {\r\n      //check for category only\r\n      const subset = visibleServices.filter(\r\n        (service) => service.jobCategoryId === categoryId\r\n      );\r\n      setFilteredSearch(subset);\r\n    } else if (zip.length == 5 && parseInt(radiusMiles) > 0) {\r\n      const zipCodeResponse = zipCodeRadius?.DataList;\r\n      const zipCodes = zipCodeResponse.map((zip) => parseInt(zip.Code));\r\n\r\n      const subset = visibleServices.filter((service) =>\r\n        zipCodes.includes(service.zipCode)\r\n      );\r\n      setFilteredSearch(subset);\r\n    } else if (zip.length == 5) {\r\n      //check for zipcode only\r\n      const subset = visibleServices.filter(\r\n        (service) => service.zipCode === parseInt(zip)\r\n      );\r\n      setFilteredSearch(subset);\r\n    } else {\r\n      setFilteredSearch(visibleServices);\r\n    }\r\n  };\r\n\r\n  //clear fields for reset btn\r\n  const resetFields = () => {\r\n    jobCategoryId.current.value = 0;\r\n    zipCode.current.value = \"\";\r\n    radius.current.value = \"\";\r\n    setFilteredSearch(visibleServices);\r\n  };\r\n\r\n  return (\r\n    <div className=\"s-layout\">\r\n      <div className=\"s-layout__sidebar\">\r\n        <nav className=\"s-sidebar__nav\">\r\n          <div>\r\n            <label htmlFor=\"\">Category</label>\r\n            <select\r\n              name=\"jobCategoryId\"\r\n              id=\"jobCatelory\"\r\n              ref={jobCategoryId}\r\n              required\r\n            >\r\n              <option value=\"0\">Select a Catelory</option>\r\n              {categories.map((c) => (\r\n                <option key={c.id} value={c.id}>\r\n                  {c.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"\">Zip Code</label>\r\n            <input type=\"text\" id=\"zipCode\" ref={zipCode} />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"\">Radius</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"radius\"\r\n              ref={radius}\r\n              placeholder=\"in miles...\"\r\n            />\r\n          </div>\r\n          <div className=\"filterBtn\">\r\n            <button\r\n              onClick={() => {\r\n                if (\r\n                  parseInt(radius.current.value) > 0 &&\r\n                  zipCode.current.value == \"\"\r\n                ) {\r\n                  alert(\"Enter zipcode to find radius\");\r\n                } else if (\r\n                  parseInt(radius.current.value) < 1 ||\r\n                  parseInt(radius.current.value) > 200\r\n                ) {\r\n                  alert(\"Radius must be between 1 and 200 miles\");\r\n                } else {\r\n                  //btn toggle for radius useEffect\r\n                  if (btnClicked === false) {\r\n                    setBtnClicked(true);\r\n                  } else {\r\n                    setBtnClicked(false);\r\n                  }\r\n                  handleFilters();\r\n                }\r\n              }}\r\n            >\r\n              Filter\r\n            </button>\r\n          </div>\r\n          <div className=\"resetBtn\">\r\n            <a\r\n              className=\"resetLink\"\r\n              href=\"#\"\r\n              onClick={() => {\r\n                resetFields();\r\n              }}\r\n            >\r\n              Reset\r\n            </a>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\user\\UserProvider.js",[],"C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\user\\UserAccount.js",["173"],"C:\\Users\\CJ\\workspace\\frontend\\oddjobs\\oddjobs\\src\\components\\user\\UserPostCard.js",[],{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":24,"column":6,"nodeType":"180","endLine":24,"endColumn":8,"suggestions":"181"},{"ruleId":"178","severity":1,"message":"182","line":46,"column":6,"nodeType":"180","endLine":46,"endColumn":38,"suggestions":"183"},{"ruleId":"184","severity":1,"message":"185","line":12,"column":10,"nodeType":"186","messageId":"187","endLine":12,"endColumn":19},{"ruleId":"178","severity":1,"message":"188","line":75,"column":6,"nodeType":"180","endLine":75,"endColumn":8,"suggestions":"189"},{"ruleId":"184","severity":1,"message":"190","line":1,"column":27,"nodeType":"186","messageId":"187","endLine":1,"endColumn":36},{"ruleId":"178","severity":1,"message":"191","line":15,"column":6,"nodeType":"180","endLine":15,"endColumn":8,"suggestions":"192"},{"ruleId":"184","severity":1,"message":"190","line":1,"column":29,"nodeType":"186","messageId":"187","endLine":1,"endColumn":38},{"ruleId":"184","severity":1,"message":"193","line":1,"column":40,"nodeType":"186","messageId":"187","endLine":1,"endColumn":48},{"ruleId":"194","severity":1,"message":"195","line":29,"column":5,"nodeType":"196","endLine":29,"endColumn":46},{"ruleId":"178","severity":1,"message":"197","line":25,"column":6,"nodeType":"180","endLine":25,"endColumn":8,"suggestions":"198"},{"ruleId":"178","severity":1,"message":"182","line":50,"column":6,"nodeType":"180","endLine":50,"endColumn":46,"suggestions":"199"},{"ruleId":"184","severity":1,"message":"200","line":9,"column":9,"nodeType":"186","messageId":"187","endLine":9,"endColumn":16},{"ruleId":"178","severity":1,"message":"201","line":15,"column":6,"nodeType":"180","endLine":15,"endColumn":8,"suggestions":"202"},{"ruleId":"184","severity":1,"message":"190","line":1,"column":29,"nodeType":"186","messageId":"187","endLine":1,"endColumn":38},{"ruleId":"184","severity":1,"message":"193","line":1,"column":40,"nodeType":"186","messageId":"187","endLine":1,"endColumn":48},{"ruleId":"194","severity":1,"message":"195","line":29,"column":5,"nodeType":"196","endLine":29,"endColumn":24},{"ruleId":"178","severity":1,"message":"203","line":72,"column":6,"nodeType":"180","endLine":72,"endColumn":8,"suggestions":"204"},{"ruleId":"178","severity":1,"message":"179","line":17,"column":6,"nodeType":"180","endLine":17,"endColumn":8,"suggestions":"205"},{"ruleId":"178","severity":1,"message":"206","line":21,"column":6,"nodeType":"180","endLine":21,"endColumn":8,"suggestions":"207"},{"ruleId":"208","severity":1,"message":"209","line":36,"column":31,"nodeType":"210","messageId":"211","endLine":36,"endColumn":33},{"ruleId":"208","severity":1,"message":"209","line":36,"column":61,"nodeType":"210","messageId":"211","endLine":36,"endColumn":63},{"ruleId":"178","severity":1,"message":"212","line":39,"column":6,"nodeType":"180","endLine":39,"endColumn":34,"suggestions":"213"},{"ruleId":"208","severity":1,"message":"214","line":49,"column":18,"nodeType":"210","messageId":"211","endLine":49,"endColumn":20},{"ruleId":"208","severity":1,"message":"214","line":63,"column":62,"nodeType":"210","messageId":"211","endLine":63,"endColumn":64},{"ruleId":"208","severity":1,"message":"214","line":76,"column":27,"nodeType":"210","messageId":"211","endLine":76,"endColumn":29},{"ruleId":"208","severity":1,"message":"214","line":84,"column":27,"nodeType":"210","messageId":"211","endLine":84,"endColumn":29},{"ruleId":"208","severity":1,"message":"214","line":139,"column":41,"nodeType":"210","messageId":"211","endLine":139,"endColumn":43},{"ruleId":"194","severity":1,"message":"215","line":163,"column":13,"nodeType":"196","endLine":169,"endColumn":14},{"ruleId":"178","severity":1,"message":"206","line":20,"column":6,"nodeType":"180","endLine":20,"endColumn":8,"suggestions":"216"},{"ruleId":"178","severity":1,"message":"197","line":24,"column":6,"nodeType":"180","endLine":24,"endColumn":8,"suggestions":"217"},{"ruleId":"208","severity":1,"message":"209","line":39,"column":31,"nodeType":"210","messageId":"211","endLine":39,"endColumn":33},{"ruleId":"208","severity":1,"message":"209","line":39,"column":61,"nodeType":"210","messageId":"211","endLine":39,"endColumn":63},{"ruleId":"178","severity":1,"message":"212","line":42,"column":6,"nodeType":"180","endLine":42,"endColumn":34,"suggestions":"218"},{"ruleId":"208","severity":1,"message":"214","line":52,"column":18,"nodeType":"210","messageId":"211","endLine":52,"endColumn":20},{"ruleId":"208","severity":1,"message":"214","line":66,"column":62,"nodeType":"210","messageId":"211","endLine":66,"endColumn":64},{"ruleId":"208","severity":1,"message":"214","line":80,"column":27,"nodeType":"210","messageId":"211","endLine":80,"endColumn":29},{"ruleId":"208","severity":1,"message":"214","line":88,"column":27,"nodeType":"210","messageId":"211","endLine":88,"endColumn":29},{"ruleId":"208","severity":1,"message":"214","line":145,"column":41,"nodeType":"210","messageId":"211","endLine":145,"endColumn":43},{"ruleId":"194","severity":1,"message":"215","line":168,"column":13,"nodeType":"196","endLine":174,"endColumn":14},{"ruleId":"178","severity":1,"message":"219","line":19,"column":6,"nodeType":"180","endLine":19,"endColumn":8,"suggestions":"220"},"no-native-reassign",["221"],"no-negated-in-lhs",["222"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getJobs'. Either include it or remove the dependency array.","ArrayExpression",["223"],"React Hook useEffect has a missing dependency: 'filteredSearch'. Either include it or remove the dependency array.",["224"],"no-unused-vars","'isLoading' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'getCategories', 'getJobById', and 'jobId'. Either include them or remove the dependency array.",["225"],"'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'getJobById' and 'jobId'. Either include them or remove the dependency array.",["226"],"'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'getServices'. Either include it or remove the dependency array.",["227"],["228"],"'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getServiceById' and 'serviceId'. Either include them or remove the dependency array.",["229"],"React Hook useEffect has missing dependencies: 'getCategories', 'getServiceById', and 'serviceId'. Either include them or remove the dependency array.",["230"],["231"],"React Hook useEffect has a missing dependency: 'getCategories'. Either include it or remove the dependency array.",["232"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'getZipCodeRadius'. Either include it or remove the dependency array.",["233"],"Expected '===' and instead saw '=='.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["234"],["235"],["236"],"React Hook useEffect has missing dependencies: 'currentUser' and 'getUserById'. Either include them or remove the dependency array.",["237"],"no-global-assign","no-unsafe-negation",{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"238","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"255","fix":"259"},{"desc":"246","fix":"260"},{"desc":"257","fix":"261"},{"desc":"262","fix":"263"},"Update the dependencies array to be: [getJobs]",{"range":"264","text":"265"},"Update the dependencies array to be: [filteredSearch, jobs, searchTerms, visibleJobs]",{"range":"266","text":"267"},"Update the dependencies array to be: [getCategories, getJobById, jobId]",{"range":"268","text":"269"},"Update the dependencies array to be: [getJobById, jobId]",{"range":"270","text":"271"},"Update the dependencies array to be: [getServices]",{"range":"272","text":"273"},"Update the dependencies array to be: [filteredSearch, searchTerms, services, visibleServices]",{"range":"274","text":"275"},"Update the dependencies array to be: [getServiceById, serviceId]",{"range":"276","text":"277"},"Update the dependencies array to be: [getCategories, getServiceById, serviceId]",{"range":"278","text":"279"},{"range":"280","text":"265"},"Update the dependencies array to be: [getCategories]",{"range":"281","text":"282"},"Update the dependencies array to be: [filteredSearch, btnClicked, getZipCodeRadius]",{"range":"283","text":"284"},{"range":"285","text":"282"},{"range":"286","text":"273"},{"range":"287","text":"284"},"Update the dependencies array to be: [currentUser, getUserById]",{"range":"288","text":"289"},[863,865],"[getJobs]",[1545,1577],"[filteredSearch, jobs, searchTerms, visibleJobs]",[2193,2195],"[getCategories, getJobById, jobId]",[483,485],"[getJobById, jobId]",[943,945],"[getServices]",[1791,1831],"[filteredSearch, searchTerms, services, visibleServices]",[511,513],"[getServiceById, serviceId]",[2299,2301],"[getCategories, getServiceById, serviceId]",[703,705],[759,761],"[getCategories]",[1317,1345],"[filteredSearch, btnClicked, getZipCodeRadius]",[741,743],[795,797],[1351,1379],[620,622],"[currentUser, getUserById]"]